{"version":3,"sources":["image/shibafu.png","image/mogura2.png","image/hit_mogura.png","mogura.js","serviceWorker.js","index.js"],"names":["module","exports","Todo","props","onClick","id","location","state","scole","document","getElementById","src","hit","setState","rand_MoguraUp","time","shibafu","a","Math","floor","random","console","log","IdNum","mogura","ClickStart","StartFlg","Flg","intervalId","setInterval","setAttribute","style","backgroundColor","setTimeout","finish_mogura","clearInterval","removeAttribute","result","view_time","this","view_scole","className","ClassName","type","value","alt","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d14bd0f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shibafu.46ee5b4a.png\";","module.exports = __webpack_public_path__ + \"static/media/mogura2.b295d306.png\";","module.exports = __webpack_public_path__ + \"static/media/hit_mogura.4b88db3d.png\";","import React, { Component } from 'react';\r\nimport \"./mogura.css\";\r\nimport mogura from './image/mogura2.png';\r\nimport shibafu from './image/shibafu.png';\r\nimport hit from './image/hit_mogura.png';\r\n\r\nexport default class Todo extends Component  {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            location:\"Mas1\",\r\n            StartFlg:false,\r\n            result:0,\r\n            time:30,\r\n            scole:0\r\n        };\r\n    }\r\n\r\n    onClick = (id) => {\r\n        const {location} = this.state;\r\n        const {scole} = this.state;\r\n\r\n        if(location === id){\r\n            var img = document.getElementById(id);\r\n            img.src = hit;\r\n\r\n            this.setState({\r\n                scole:scole + 10\r\n            })\r\n        }\r\n    }\r\n    \r\n    rand_MoguraUp = () =>{\r\n        const {location} = this.state;\r\n        const {time} = this.state;\r\n        var img = document.getElementById(location);\r\n        img.src = shibafu;\r\n\r\n        var a = Math.floor( Math.random() * 25)+1 ;\r\n        console.log(a);\r\n\r\n        const IdNum = \"Mas\" + a;\r\n        this.setState({\r\n            location:IdNum\r\n        })\r\n\r\n        var Next_img = document.getElementById(IdNum);\r\n        Next_img.src = mogura;\r\n\r\n        this.setState({\r\n            time:time - 1\r\n        })\r\n    }\r\n\r\n    ClickStart = () =>{\r\n        const {StartFlg} = this.state;\r\n        console.log(\"flg is \"+ StartFlg);\r\n        var Flg = StartFlg;\r\n        if(StartFlg === false){\r\n            this.intervalId = setInterval(()=>{\r\n                this.rand_MoguraUp();\r\n            }, 1000);\r\n            document.getElementById(\"StButton\").setAttribute(\"disabled\", \"disabled\");\r\n            document.getElementById(\"StButton\").style.backgroundColor = \"gray\";\r\n            setTimeout(()=>{\r\n                this.finish_mogura();\r\n            },30000);\r\n            Flg = true;\r\n        }\r\n        this.setState({\r\n            StartFlg:Flg\r\n        });\r\n    }\r\n\r\n    finish_mogura = () =>{\r\n        console.log(\"test\");\r\n        clearInterval(this.intervalId);\r\n        document.getElementById(\"StButton\").removeAttribute(\"disabled\");\r\n        document.getElementById(\"StButton\").style.backgroundColor = \"#24d\";\r\n    }\r\n    \r\n    render() {\r\n        const {time} = this.state;\r\n        const {scole} = this.state;\r\n\r\n        const view_time = time + \"秒\";\r\n        const view_scole = scole + \"点\";\r\n\r\n        return (<div className=\"divCenter\">\r\n            \r\n            <div ClassName=\"CCC\">\r\n            <label className=\"title\">\r\n                <u>モグラたたきゲーム</u>\r\n            </label>\r\n            <input type=\"button\" id=\"StButton\"　className=\"StButton\" value=\"スタート\" onClick={this.ClickStart}></input>\r\n            <label id=\"timer\"></label>\r\n            </div>\r\n            <div className=\"AAA\">\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><img id=\"Mas1\" src={shibafu} alt=\"green\" onClick={() => this.onClick(\"Mas1\" )} /></td>\r\n                        <td><img id=\"Mas2\" src={shibafu} alt=\"green\" onClick={() => this.onClick(\"Mas2\" )} /></td>\r\n                        <td><img id=\"Mas3\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas3\" )} /></td>\r\n                        <td><img id=\"Mas4\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas4\" )} /></td>\r\n                        <td><img id=\"Mas5\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas5\" )} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><img id=\"Mas6\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas6\" )} /></td>\r\n                        <td><img id=\"Mas7\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas7\" )} /></td>\r\n                        <td><img id=\"Mas8\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas8\" )} /></td>\r\n                        <td><img id=\"Mas9\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas9\" )} /></td>\r\n                        <td><img id=\"Mas10\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas10\" )} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><img id=\"Mas11\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas11\" )} /></td>\r\n                        <td><img id=\"Mas12\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas12\" )} /></td>\r\n                        <td><img id=\"Mas13\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas13\" )} /></td>\r\n                        <td><img id=\"Mas14\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas14\" )} /></td>\r\n                        <td><img id=\"Mas15\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas15\" )} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><img id=\"Mas16\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas16\" )} /></td>\r\n                        <td><img id=\"Mas17\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas17\" )} /></td>\r\n                        <td><img id=\"Mas18\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas18\" )} /></td>\r\n                        <td><img id=\"Mas19\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas19\" )} /></td>\r\n                        <td><img id=\"Mas20\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas20\" )} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><img id=\"Mas21\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas21\" )} /></td>\r\n                        <td><img id=\"Mas22\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas22\" )} /></td>\r\n                        <td><img id=\"Mas23\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas23\" )} /></td>\r\n                        <td><img id=\"Mas24\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas24\" )} /></td>\r\n                        <td><img id=\"Mas25\" src={shibafu} alt=\"green\"  onClick={() => this.onClick(\"Mas25\" )} /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            </div> \r\n            <div className=\"BBB\">\r\n            <a className=\"subtitle\">残り時間</a><br/>\r\n                <label id=\"timer\">{view_time}</label><br/>\r\n                <a/><br/>\r\n                <a className=\"subtitle\">得点</a><br/>\r\n                <label id=\"timer\">{view_scole}</label>\r\n                </div>               \r\n            </div>\r\n        );\r\n    }\r\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Mogura from './mogura';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Mogura />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}